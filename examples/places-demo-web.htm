<!doctype html>
<!--
    View this Demo Online at:
    https://www.dataformsjs.com/examples/places-demo-web.htm
-->
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title data-i18n="Countries Demo | Web Components"></title>
        <link rel="stylesheet" href="css/countries.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui-flag@2.4.0/flag.min.css">
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin=""/>
        <link rel="canonical" href="https://www.dataformsjs.com/examples/places-demo-hbs.htm">
        <style>
            /* Prevent custom web components from appearing during rendering include the following CSS */
            json-data:not(:defined),
            is-loading:not(:defined),
            has-error:not(:defined),
            is-loaded:not(:defined) { display:none; }
        </style>
    </head>
    <body>
        <div id="view" dir="auto"></div>

        <url-hash-router view-selector="#view">
            <!--
                Routes can be embedded directly on the page as a <template> under <url-hash-route>.
                [default-route] is optional and can be used if the default path is something other than "/".
            -->
            <url-hash-route path="/" default-route>
                <template>
                    <h1>Countries</h1>

                    <nav>
                        <a href="#/info">Info</a>
                    </nav>

                    <json-data url="https://www.dataformsjs.com/data/geonames/countries" load-only-once="true">
                        <is-loading>
                            <span class="loading">Loading...</span>
                        </is-loading>
                        <has-error>
                            <span class="error" data-bind="errorMessage"></span>
                        </has-error>
                        <is-loaded class="flex-col">
                            <input
                                is="input-filter"
                                filter-selector="table"
                                filter-results-selector="h1"
                                filter-results-text-all="{totalCount} Countries"
                                filter-results-text-filtered="Showing {displayCount} of {totalCount} Countries"
                                placeholder="Enter filter, example 'North America'">

                            <div class="responsive-table">
                                <!--
                                    This version of the <data-table> uses a custom <template> to
                                    define how each table row item will be defined. This is used
                                    here to allow for display of the flag icon and number formatting.

                                    The template format is HTML using JavaScript template literals
                                    (template strings). All values in `${value}` are safely escaped for HTML.

                                    See another commented option for <data-table> below this version.

                                    Either <template> or <script type="text/x-template"> can be used.
                                        <template> will work with all modern browsers
                                        <script type="text/x-template"> is required if supporting IE with [polyfill.js]
                                -->
                                <data-table
                                    data-bind="countries"
                                    highlight-class="highlight"
                                    labels="Code, Name, Size (KM), Population, Continent"
                                    table-attr="is=sortable-table,
                                                data-sort-class-odd=row-odd,
                                                data-sort-class-even=row-even">
                                    <script type="text/x-template">
                                        <tr>
                                            <td><a href="#/regions/${iso}">${iso}</a></td>
                                            <td>
                                                <i class="${iso.toLowerCase()} flag"></i>
                                                ${country}
                                            </td>
                                            <td class="align-right" data-value="${area_km}">${format.number(area_km)}</td>
                                            <td class="align-right" data-value="${population}">${format.number(population)}</td>
                                            <td>${continent}</td>
                                        </tr>
                                    </script>
                                </data-table>

                                <!--
                                    For a basic table a <template> is not required. This version still
                                    contains links by using the [col-link-template] attribute however
                                    it will not show the flag icons or format numbers.
                                -->
                                <!--
                                <data-table
                                    data-bind="countries"
                                    highlight-class="highlight"
                                    col-link-template="#/regions/:iso"
                                    labels="Code, Name, Size (KM), Population, Continent"
                                    table-attr="is=sortable-table,
                                                data-sort-class-odd=row-odd,
                                                data-sort-class-even=row-even">
                                </data-table>
                                -->
                            </div>
                        </is-loaded>
                    </json-data>
                </template>
            </url-hash-route>

            <!--
                The <template> source can also be downloaded dynamically when using [src]
            -->
            <url-hash-route path="/regions/:country" src="html/regions-web.htm"></url-hash-route>
            <url-hash-route path="/cities/:country/:region" src="html/cities-web.htm"></url-hash-route>
            <url-hash-route path="/city/:id" src="html/place-web.htm"></url-hash-route>
            <url-hash-route path="/info" src="html/places-info-web.htm"></url-hash-route>
        </url-hash-router>

        <!-- DataFormsJS Web Components -->
        <!-- <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/url-hash-router.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/json-data.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/data-table.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/input-filter.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/sortable-table.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/data-list.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/leaflet-map.min.js"></script> -->

        <script type="module" src="../js/web-components/url-hash-router.js"></script>
        <script type="module" src="../js/web-components/json-data.js"></script>
        <script type="module" src="../js/web-components/data-table.js"></script>
        <script type="module" src="../js/web-components/input-filter.js"></script>
        <script type="module" src="../js/web-components/sortable-table.js"></script>
        <script type="module" src="../js/web-components/data-list.js"></script>
        <script type="module" src="../js/web-components/leaflet-map.js"></script>

        <script nomodule src="../js/web-components/polyfill.js"></script>

        <!-- <script src="../js/web-components/polyfill.js"></script> -->

        <!-- Older browsers (IE, Older Mobile Devices, etc) will see a warning -->
        <!--
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/safari-nomodule.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@4.8.0/js/web-components/old-browser-warning.min.js"></script>
        -->

        <!-- https://leafletjs.com -->
        <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js" integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og==" crossorigin=""></script>

        <script>
            /**
             * Display Elevation in both Meters and Feet
             *
             * This function ends up being used by <templates> under <data-table> elements
             * and also in [data-bind] elements using formatting: [data-format="formatElevation"].
             */
            function formatElevation(text) {
                var meters = parseInt(text, 10);
                if (!isNaN(meters)) {
                    var feet = parseInt(meters * 3.28084, 10)
                    return Number(meters).toLocaleString() + ' m / ' + Number(feet).toLocaleString() + "'";
                }
                return text;
            }
        </script>

        <!--
            API Event Demo
            The 3 events ['app:routeChanged', 'app:contentReady', 'app:error'] are available from both
            the Web Components and [polyfill.js]. The events happen the specific Web Components and
            bubble up to the the `document` so they can be easily handled from JavaScript on the page.
        -->
        <script>
            (function() {
                'use strict';
                var isIE = (navigator.userAgent.indexOf('Trident/') !== -1);

                function log(text, color) {
                    if (isIE) {
                        console.log(text);
                    } else {
                        console.log('%c' + text, 'color:' + color + '; font-weight:bold;');
                    }
                }

                // Handle routing changes from <url-hash-router> or <url-router>
                document.addEventListener('app:routeChanged', function(event) {
                    log('app:routeChanged', 'blue');
                    console.log(event);
                    console.log(event.target);
                });

                // Handle content ready from <json-data>
                document.addEventListener('app:contentReady', function(event) {
                    log('app:contentReady', 'green');
                    console.log(event);
                    console.log(event.target);
                });

                // Handle errors from <json-data>, <url-hash-router>, or <url-router>
                document.addEventListener('app:error', function(event) {
                    log('app:error', 'red');
                    console.warn(event);
                    console.log(event.target);
                    console.error(event.detail); // Error Message or Error Object
                });
            })();
        </script>
    </body>
</html>
