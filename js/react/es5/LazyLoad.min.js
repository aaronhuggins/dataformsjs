!function(){"use strict";var i=void 0===window.React&&void 0!==window.preact?window.preact:window.React;function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){if(e=e,!(null!=(t=t)&&"undefined"!=typeof Symbol&&t[Symbol.hasInstance]?t[Symbol.hasInstance](e):e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(r){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=l(r);return e=n?(e=l(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments),t=this,!(e=e)||"object"!==o(e)&&"function"!=typeof e?function(e){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(t):e}}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var e=function(){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(o,i.Component);var e,t,r,n=u(o);function o(e){return s(this,o),(e=n.call(this,e)).state={isReady:!1},e}return e=o,(t=[{key:"componentDidMount",value:function(){var e=this;this.loadScripts(this.props.scripts,this.props.loadScriptsInOrder).then(function(){e.setState({isReady:!0})})}},{key:"loadScripts",value:function(i,e){function s(i){return new Promise(function(e){for(var t=document.querySelectorAll("link"),r=0,n=t.length;r<n;r++)if("stylesheet"===t[r].rel&&t[r].getAttribute("href")===i)return void e();var o=document.createElement("link");o.rel="stylesheet",o.onload=e,o.onerror=function(){console.error("Error loading CSS File: "+i),e()},o.href=i,document.head.appendChild(o)})}function c(i){return new Promise(function(e){for(var t=document.querySelectorAll("script"),r=0,n=t.length;r<n;r++)if(t[r].getAttribute("src")===i)return void e();var o=document.createElement("script");o.onload=e,o.onerror=function(){console.error("Error loading JS File: "+i),e()},o.src=i,document.head.appendChild(o)})}function a(i){return new Promise(function(e){for(var t=document.querySelectorAll("script[data-src][data-compiler]"),r=0,n=t.length;r<n;r++)if(t[r].getAttribute("data-src")===i)return void e();var o=document.createElement("script");o.type="text/babel",o.setAttribute("src",i),document.head.appendChild(o),jsxLoader.loadScript(o).then(function(){e()})})}if("string"==typeof i)i=[i];else if(!Array.isArray(i))return console.error("Invalid prop for <LazyLoad>, expected [scripts] to be a string or an array of strings. Check console."),console.log(i),new Promise(function(e){e()});return!0===e?new Promise(function(r){var n=0,o=i.length;!function e(){var t;n!==o?(t=i[n],n++,t.endsWith(".js")?c(t).then(e):t.endsWith(".css")?s(t).then(e):t.endsWith(".jsx")?a(t).then(e):(console.error("Invalid Script for <LazyLoad>. Only scripts ending with [js, css, or jsx] can be used. Error URL: "+t),e())):r()}()}):new Promise(function(e){for(var t=[],r=0,n=i.length;r<n;r++){var o=i[r];o.endsWith(".js")?t.push(c(o)):o.endsWith(".css")?t.push(s(o)):o.endsWith(".jsx")?t.push(a(o)):console.error("Invalid Script for <LazyLoad>. Only scripts ending with [js, css, or jsx] can be used. Error URL: "+o)}Promise.all(t).then(function(){e()})})}},{key:"loadPolyfill",value:function(e,o){return!1===e||void 0===e?new Promise(function(e,t){var r,n;r=e,n=t,(t=document.createElement("script")).onload=function(){r()},t.onerror=function(){console.error("Error loading Script: "+o),n()},t.src=o,document.head.appendChild(t)}):new Promise(function(e){e()})}},{key:"render",value:function(){if(!this.state.isReady)return this.props.isLoading||null;if(this.props.children)return this.props.children;if(this.props.isLoaded){if("string"!=typeof this.props.isLoaded)return this.props.isLoaded;var e,t=this.props.isLoaded,r={};for(e in this.props)this.props.hasOwnProperty(e)&&"scripts"!==e&&"isLoaded"!==e&&"isLoading"!==e&&(r[e]=this.props[e]);if(void 0!==window&&void 0!==window[t])return i.createElement(window[t],r);if(void 0!==globalThis&&void 0!==globalThis[t])return i.createElement(globalThis[t],r);throw new TypeError("Component <LazyLoad isLoaded="+JSON.stringify(t)+"> was not found. Check if your script is missing or has a compile error.")}throw new TypeError("Missing child nodes or the [isLoaded] property for a <LazyLoad> element.")}}])&&c(e.prototype,t),r&&c(e,r),o}();window.LazyLoad=e}();