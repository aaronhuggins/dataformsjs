window.Markdown = class Markdown extends React.Component{constructor(t){super(t),this.state={content:"string"!=typeof t.content?null:t.content,errorMessage:null,isLoaded:!1},this._isMounted=!1,this._returnCode=!1,this.fetchContent=this.fetchContent.bind(this),this.highlight=this.highlight.bind(this),this.updateContent=this.updateContent.bind(this),this.markdownEl=React.createRef()}componentDidMount(){this._isMounted=!0,this.props.url&&null===this.state.content?this.fetchContent():this.updateContent()}componentWillUnmount(){this._isMounted=!1}componentDidUpdate(t){this.props.url&&t.url!==this.props.url?this.fetchContent():this.updateContent()}fetchContent(){fetch(this.props.url,this.props.fetchOptions).then((t=>{const e=t.status;if(e>=200&&e<300||304===e)return Promise.resolve(t);{const r=`Error loading markdown content from [${this.props.url}]. Server Response Code: ${e}, Response Text: ${t.statusText}`;return Promise.reject(r)}})).then((t=>t.text())).then((t=>{this._isMounted&&this.setState({content:t,errorMessage:null,isLoaded:!0})})).catch((t=>{this._isMounted&&this.setState({errorMessage:t})}))}highlight(t,e){const r=this.props.hljs||window.hljs;if(void 0===r)return this._returnCode?t:"";if(e&&r.getLanguage(e))try{return r.highlight(e,t).value}catch(t){console.warn(t)}try{return r.highlightAuto(t).value}catch(t){console.warn(t)}return this._returnCode?t:""}updateContent(){if(!this._isMounted||!this.markdownEl.current)return;if(void 0!==(this.props.hljs||window.hljs)){const t=this.markdownEl.current.querySelectorAll('code[class*="language-"]');for(let e=0,r=t.length;e<r;e++)t[e].classList.add("hljs")}const t=this.props.linkTarget,e=this.props.linkRel;if(t||e){const r=this.markdownEl.current.querySelectorAll("a");Array.prototype.forEach.call(r,(function(r){r.target=t||r.target,r.rel=e||r.rel}))}const r=this.props.linkRootUrl;if(r){const t=this.markdownEl.current.querySelectorAll('a:not([href^="http:"]):not([href^="https:"])');Array.prototype.forEach.call(t,(function(t){const e=t.getAttribute("href");t.setAttribute("data-original-href",e),t.setAttribute("href",r+e)}))}}render(){if(this.state.errorMessage){const t=(this.props.className?this.props.className:"")+" error",e="object"==typeof this.props.errorStyle?this.props.errorStyle:{backgroundColor:"red",color:"#fff",fontWeight:"bold",border:"1px solid darkred",padding:"1em"};return React.createElement("div",{className:t,ref:this.markdownEl,style:e},this.state.errorMessage)}if(this.props.url&&!this.state.isLoaded)return this.props.isLoading?this.props.isLoading:null;if(null===this.state.content)return null;if(this.props.showSource)return React.createElement("div",{className:this.props.className,ref:this.markdownEl},React.createElement("pre",null,this.state.content));let t,e;if(this._returnCode=!1,this.props.marked||window.marked){this._returnCode=!0;const e=this.props.marked||window.marked;e.setOptions({highlight:this.highlight}),t=e(this.state.content)}else if(this.props.markdownit||window.markdownit){if(e=(this.props.markdownit||window.markdownit)({html:!0,linkify:!0,typographer:!0,highlight:this.highlight}),this.props.markdownitEmoji||window.markdownitEmoji){const t=this.props.markdownitEmoji||window.markdownitEmoji;e.use(t)}t=e.render(this.state.content)}else{if(!this.props.Remarkable&&!window.remarkable)throw new Error("Error - Unable to show Markdown content because a Markdown JavaScript library was not found on the page.");{e=new(this.props.Remarkable||window.remarkable.Remarkable)({html:!0,typographer:!0,highlight:this.highlight});const r=this.props.linkify||window.remarkable.linkify;r&&e.use(r),t=e.render(this.state.content)}}const r=this.props.DOMPurify||window.DOMPurify;return void 0!==r&&(t=r.sanitize(t)),React.createElement("div",{className:this.props.className,dangerouslySetInnerHTML:{__html:t},ref:this.markdownEl})}}