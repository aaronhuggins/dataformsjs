import React from"react";let _supportsPassive=!1;try{const e=Object.defineProperty({},"passive",{get:function(){return _supportsPassive=!0,!0}});window.addEventListener("testPassive",null,e),window.removeEventListener("testPassive",null,e)}catch(e){}function BasicImage(e){return React.createElement("img",{src:e.thumbnail,alt:e.title,onClick:e.onClick})}export default class ImageGallery extends React.Component{constructor(e){super(e),this.onClick=this.onClick.bind(this),this.handleDocKeyDown=this.handleDocKeyDown.bind(this),this.preloadNextImages=this.preloadNextImages.bind(this),this.hideOverlay=this.hideOverlay.bind(this),this.changeImage=this.changeImage.bind(this),this.overlayStyleId="image-gallery-css",this.overlayStyleCss="\n            body.blur { filter: blur(3px); }\n\n            .image-gallery-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(255,255,255,.8);\n                cursor: pointer;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n\n            .image-gallery-overlay img {\n                max-width: 100%;\n                max-height: 100%;\n            }\n        ",this.imageIndex=null,this.overlay=null,this.overlayImg=null,this.touchStartX=null,this.state={images:e.images}}onClick(e){let t=e.target.src;t||(t=e.target.getAttribute("data-image")),this.imageIndex=-1;for(let e=0,a=this.state.images.length;e<a;e++)if(this.state.images[e].thumbnail===t){this.imageIndex=e;break}this.showOverlay()}loadCss(){let e=document.getElementById(this.overlayStyleId);null===e&&((e=document.createElement("style")).id=this.overlayStyleId,e.innerHTML=this.overlayStyleCss,document.head.appendChild(e))}showOverlay(){this.loadCss(),this.overlay=document.createElement("div"),this.overlay.className="image-gallery-overlay",this.overlayImg=document.createElement("img"),this.overlayImg.addEventListener("load",this.preloadNextImages),this.overlayImg.src=this.state.images[this.imageIndex].image,this.overlay.appendChild(this.overlayImg),this.addOverlayEvents(),document.documentElement.appendChild(this.overlay),document.querySelector("body").classList.add("blur")}addOverlayEvents(){this.overlay.onclick=this.hideOverlay,document.addEventListener("keydown",this.handleDocKeyDown),this.overlay.addEventListener("touchstart",e=>{this.touchStartX=e.changedTouches[0].screenX},!!_supportsPassive&&{passive:!0}),this.overlay.addEventListener("touchend",e=>{var t=e.changedTouches[0].screenX;t>this.touchStartX?this.changeImage("left"):t<this.touchStartX&&this.changeImage("right")})}handleDocKeyDown(e){switch(e.key){case"ArrowLeft":this.changeImage("left");break;case"ArrowRight":this.changeImage("right");break;case"Escape":this.hideOverlay()}}hideOverlay(){this.overlay.parentNode.removeChild(this.overlay),this.overlayImg=null,this.overlay=null,document.removeEventListener("keydown",this.handleDocKeyDown),document.querySelector("body").classList.remove("blur")}preloadNextImages(){if(-1===window.Image.toString().indexOf("[native code]"))return void console.warn("Images for <ImageGallery> cannot be preloaded because the app defined a <Image> component that overwrote the browsers native [Image] class.");const e=this.state.images.length;let t=this.imageIndex-1;if(-1===t&&(t=e-1),t!==this.imageIndex){(new Image).src=this.state.images[t].image}let a=this.imageIndex+1;if(a===e&&(a=0),a!==this.imageIndex){(new Image).src=this.state.images[a].image}}changeImage(e){const t=this.state.images.length;this.imageIndex="right"===e?this.imageIndex===t-1?0:this.imageIndex+1:0===this.imageIndex?t-1:this.imageIndex-1,this.overlayImg.src="",this.overlayImg.src=this.state.images[this.imageIndex].image}render(){let e=this.props.template;return void 0===e&&(e=void 0!==this.props.children?this.props.children:React.createElement(BasicImage)),this.state.images.map(t=>React.cloneElement(e,Object.assign({},t,{onClick:this.onClick})))}};