!function(){"use strict";var r={number:function(r){return this.formatNumber(r,{})},currency:function(r,n){var t={style:"currency",currency:n,maximumFractionDigits:2};return this.formatNumber(r,t)},percent:function(r,n){void 0===n&&(n=0);var t={style:"percent",maximumFractionDigits:n,minimumFractionDigits:n};return this.formatNumber(r,t)},date:function(r){return this.formatDateTime(r,{})},dateTime:function(r){return this.formatDateTime(r,{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"})},time:function(r){return this.formatDateTime(r,{hour:"numeric",minute:"numeric",second:"numeric"})},isNumber:function(r){return!isNaN(parseFloat(r))&&isFinite(r)},formatDateTime:function(n,t){if(void 0===window.Intl)return n;try{if(n instanceof Date)return new Intl.DateTimeFormat(navigator.language,t).format(n);if(/^\d{4}-\d{2}-\d{2}$/.test(n)){var r=n.split("-").map(function(r){return parseInt(r,10)}),e=new Date(r[0],r[1]-1,r[2]);return new Intl.DateTimeFormat(navigator.language,t).format(e)}var o=new Date(n);return new Intl.DateTimeFormat(navigator.language,t).format(o)}catch(r){return console.warn("Error formatting Date/Time Value:"),console.log(navigator.language),console.log(t),console.log(n),console.log(r),"Error"}},formatNumber:function(n,t){if(null===n||""===n)return null;if(!this.isNumber(n))return console.warn("Warning value specified in DateFormsJS function formatNumber() is not a number:"),console.log(n),n;if(void 0===window.Intl)return n;try{return new Intl.NumberFormat(navigator.language,t).format(n)}catch(r){return console.warn("Error formatting Numeric Value:"),console.log(navigator.language),console.log(t),console.log(n),console.log(r),"Error"}}};app.format=r}();