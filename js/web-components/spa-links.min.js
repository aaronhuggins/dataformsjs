import{defineExtendsPolyfill}from"./utils.min.js";class SpaLinks extends HTMLElement{constructor(){super(),this.updateLinks=this.updateLinks.bind(this)}connectedCallback(){document.addEventListener("app:routeChanged",this.updateLinks)}disconnectedCallback(){document.removeEventListener("app:routeChanged",this.updateLinks)}static get observedAttributes(){return["item-selector","active-class"]}attributeChangedCallback(e){SpaLinks.observedAttributes.includes(e)&&this.updateLinks()}updateLinks(){let e=this.getAttribute("item-selector");e=null===e?"a":e;let t=this.getAttribute("active-class");t=null===t?"active":t;let s=this.querySelectorAll(e+"."+t);for(const e of s)e.classList.remove(t);const n=document.querySelector("url-router");let i;i=null!==n&&"history"!==n.getAttribute("mode")?""===window.location.hash?"#/":window.location.hash:window.location.pathname,s=this.querySelectorAll(e);for(const e of s){const s="A"===e.nodeName?e:e.querySelector("a");!s||s.getAttribute("href")!==i||s!==e&&s.parentNode!==e||e.classList.add(t)}}}window.customElements.define("spa-links",SpaLinks,{extends:"nav"}),defineExtendsPolyfill("spa-links","nav",(e=>{SpaLinks.prototype.updateLinks.apply(e)}));