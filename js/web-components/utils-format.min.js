export class Format{static number(r){return formatNumber(r,{})}static currency(r,t){return formatNumber(r,{style:"currency",currency:t,maximumFractionDigits:2})}static percent(r,t=0){return formatNumber(r,{style:"percent",maximumFractionDigits:t,minimumFractionDigits:t})}static date(r){return formatDateTime(r,{})}static dateTime(r){return formatDateTime(r,{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"})}static time(r){return formatDateTime(r,{hour:"numeric",minute:"numeric",second:"numeric"})}};function isNumber(r){return!isNaN(parseFloat(r))&&isFinite(r)}function formatDateTime(r,t){if(void 0===window.Intl)return r;try{if(r instanceof Date)return new Intl.DateTimeFormat(navigator.language,t).format(r);if(/^\d{4}-\d{2}-\d{2}$/.test(r)){const e=r.split("-").map(function(r){return parseInt(r,10)}),n=new Date(e[0],e[1]-1,e[2]);return new Intl.DateTimeFormat(navigator.language,t).format(n)}{const e=new Date(r);return new Intl.DateTimeFormat(navigator.language,t).format(e)}}catch(e){return console.warn("Error formatting Date/Time Value:"),console.log(navigator.language),console.log(t),console.log(r),console.log(e),"Error"}}function formatNumber(r,t){if(null===r||""===r)return null;if(!isNumber(r))return console.warn("Warning value specified in DateFormsJS function formatNumber() is not a number:"),console.log(r),r;if(void 0===window.Intl)return r;try{return new Intl.NumberFormat(navigator.language,t).format(r)}catch(e){return console.warn("Error formatting Numeric Value:"),console.log(navigator.language),console.log(t),console.log(r),console.log(e),"Error"}}