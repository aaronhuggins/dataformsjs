import{render,usingWebComponentsPolyfill}from"./utils.min.js";import{Format}from"./utils-format.min.js";const shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>\n        :host { display: block; }\n        :host([hidden]) { display: none; }\n    </style>\n    <slot></slot>\n";class DataList extends HTMLElement{constructor(){if(super(),usingWebComponentsPolyfill())return;this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.setAttribute("not-setup",""),this.state={list:null}}get value(){return this.state.list}set value(e){this.state.list=e,this.renderList()}get errorClass(){return this.getAttribute("error-class")}get defaultErrorStyle(){return"color:white; background-color:red; padding:0.5rem 1rem; margin:.5rem;"}renderList(){const e=this.state.list;if(null===e||""===e)return void(this.innerHTML="");if(Array.isArray(e)&&0===e.length)return void this.removeAttribute("not-setup");if(!Array.isArray(e))return console.error("Invalid list data type for [data-list]"),console.log(this),void this.removeAttribute("not-setup");const t=[],r=this.getAttribute("template-selector"),s=this.getAttribute("root-class");if(null!==r){const o=document.querySelector(r);if(null===o)return console.error("Missing template from selector: "+r),console.log(this),void this.removeAttribute("not-setup");if("TEMPLATE"!==o.nodeName)return console.error("Element at selector ["+r+"] is not a <template>"),console.log(this),void this.removeAttribute("not-setup");const n=this.getAttribute("root-element");null!==n&&(null===s?t.push(render`<${n}>`):t.push(render`<${n} class="${s}">`));try{const r=new Function("item","index","render","format","with(item){return render`"+o.innerHTML+"`}");let s=0;const i=new Format;for(const o of e){try{t.push(r(o,s,render,i))}catch(e){const r="ul"===n?"li":"div";this.errorClass?t.push(render`<${r} class="${this.errorClass}">Item Error - ${e.message}</${r}>`):t.push(render`<${r} style="${this.defaultErrorStyle}">Item Error - ${e.message}</${r}>`)}s++}}catch(e){this.errorClass?t.push(render`<div class="${this.errorClass}">Error Rendering Template - ${e.message}</div>`):t.push(render`<div style="${this.defaultErrorStyle}">Error Rendering Template - ${e.message}</div>`)}null!==n&&t.push(render`</${n}>`)}else{null===s?t.push("<ul>"):t.push(render`<ul class="${s}">`);for(const r of e)t.push(render`<li>${r}</li>`);t.push("</ul>")}this.innerHTML=t.join(""),this.removeAttribute("not-setup")}}window.customElements.define("data-list",DataList);