import{render,usingWebComponentsPolyfill}from"./utils.min.js";import{Format}from"./utils-format.min.js";const shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>:host { display:block; }</style>\n    <slot></slot>\n";class DataList extends HTMLElement{constructor(){if(super(),usingWebComponentsPolyfill())return;this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.setAttribute("not-setup",""),this.state={list:null}}get value(){return this.state.list}set value(t){this.state.list=t,this.renderList()}get errorClass(){return this.getAttribute("error-class")}get defaultErrorStyle(){return"color:white; background-color:red; padding:0.5rem 1rem; margin:.5rem;"}renderList(){const t=this.state.list;if(null===t||""===t)return void(this.innerHTML="");if(Array.isArray(t)&&0===t.length)return void this.removeAttribute("not-setup");if(!Array.isArray(t))return console.error("Invalid list data type for [data-list]"),console.log(this),void this.removeAttribute("not-setup");const e=[],r=this.getAttribute("template-selector"),s=this.getAttribute("root-class");if(null!==r){const o=document.querySelector(r);if(null===o)return console.error("Missing template from selector: "+r),console.log(this),void this.removeAttribute("not-setup");if("TEMPLATE"!==o.nodeName)return console.error("Element at selector ["+r+"] is not a <template>"),console.log(this),void this.removeAttribute("not-setup");const n=this.getAttribute("root-element");null!==n&&(null===s?e.push(render`<${n}>`):e.push(render`<${n} class="${s}">`));try{const r=new Function("item","index","render","format","with(item){return render`"+o.innerHTML+"`}");let s=0;const i=new Format;for(const o of t){try{e.push(r(o,s,render,i))}catch(t){const r="ul"===n?"li":"div";this.errorClass?e.push(render`<${r} class="${this.errorClass}">Item Error - ${t.message}</${r}>`):e.push(render`<${r} style="${this.defaultErrorStyle}">Item Error - ${t.message}</${r}>`)}s++}}catch(t){this.errorClass?e.push(render`<div class="${this.errorClass}">Error Rendering Template - ${t.message}</div>`):e.push(render`<div style="${this.defaultErrorStyle}">Error Rendering Template - ${t.message}</div>`)}null!==n&&e.push(render`</${n}>`)}else{null===s?e.push("<ul>"):e.push(render`<ul class="${s}">`);for(const r of t)e.push(render`<li>${r}</li>`);e.push("</ul>")}this.innerHTML=e.join(""),this.removeAttribute("not-setup")}}window.customElements.define("data-list",DataList);