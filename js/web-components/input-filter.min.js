import{componentsAreSetup,isAttachedToDom,usingWebComponentsPolyfill,defineExtendsPolyfill}from"./utils.min.js";class InputFilter extends HTMLInputElement{constructor(){super(),usingWebComponentsPolyfill()||this.addEventListener("input",this.filter)}async connectedCallback(){await componentsAreSetup(),isAttachedToDom(this)&&this.filter()}filter(){const t=this.value.toLowerCase().split(" "),e=t.length,l=0!==e;let r=0,s=null,n=null,i=document.querySelectorAll(this.getAttribute("filter-selector"));if(1===i.length&&"TABLE"===i[0].tagName){const t=i[0];switch(t.tBodies.length){case 0:i=[];break;case 1:i=t.tBodies[0].rows,s=t.getAttribute("data-sort-class-odd"),n=t.getAttribute("data-sort-class-even");break;default:console.warn("Unexpected Table format for Filter Plugin. Only 1 <tbody> element is supported.")}}const o=i.length,u=n&&s;for(const o of i){let i=!0;if(l){const l=o.textContent.toLowerCase();for(let r=0;r<e;r++)if(""!==t[r]&&!l.includes(t[r])){i=!1;break}}i&&(r++,u&&(r%2==0?(o.classList.add(n),o.classList.remove(s)):(o.classList.add(s),o.classList.remove(n)))),o.style.display=i?"":"none"}const c=this.getAttribute("filter-results-selector");if(c){const t=document.querySelector(c);if(!t)return void console.warn("Defined [filter-results-selector] but element not found");const e=this.getAttribute("filter-results-text-all"),l=this.getAttribute("filter-results-text-filtered");if(!e)return void console.warn("Defined [filter-results-selector] without [filter-results-text-all]");if(!l)return void console.warn("Defined [filter-results-selector] without [filter-results-text-filtered]");let s;s=(s=r===o?e:l.replace(/{displayCount}/g,r)).replace(/{totalCount}/g,o);const n=document.querySelector("url-router");n&&"object"==typeof n.currentUrlParams&&(s=s.replace(/{(.+)}/g,function(t,e){return void 0!==n.currentUrlParams[e]?String(n.currentUrlParams[e]):t})),t.textContent=s}}}window.customElements.define("input-filter",InputFilter,{extends:"input"}),defineExtendsPolyfill("input-filter","input",t=>{t.addEventListener("input",InputFilter.prototype.filter)});