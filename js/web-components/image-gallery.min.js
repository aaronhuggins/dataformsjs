const shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>:host { display:block; cursor:pointer; }</style>\n    <slot></slot>\n";const svgForwardButton='<?xml version="1.0" encoding="UTF-8"?>\n<svg width="40px" height="40px" viewBox="0 0 40 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g fill="#000000">\n            <path d="M20,0 C31.045695,0 40,8.954305 40,20 C40,31.045695 31.045695,40 20,40 C8.954305,40 0,31.045695 0,20 C0,8.954305 8.954305,0 20,0 Z M12,9.61803399 C11.4477153,9.61803399 11,10.0657492 11,10.618034 L11,10.618034 L11,29.381966 C11,29.5372111 11.0361451,29.6903242 11.1055728,29.8291796 C11.3525621,30.3231581 11.9532351,30.5233825 12.4472136,30.2763932 L12.4472136,30.2763932 L31.2111456,20.8944272 C31.404673,20.7976635 31.5615955,20.640741 31.6583592,20.4472136 C31.9053485,19.9532351 31.7051241,19.3525621 31.2111456,19.1055728 L31.2111456,19.1055728 L12.4472136,9.7236068 C12.3083582,9.65417908 12.1552451,9.61803399 12,9.61803399 Z"></path>\n        </g>\n    </g>\n</svg>',svgBackButton=svgForwardButton.replace("></path>",' transform="translate(20.000000, 20.000000) scale(-1, 1) translate(-20.000000, -20.000000)"></path>'),overlayStyleId="image-gallery-css",overlayStyleCss=`\n    body.blur { filter: blur(3px); }\n\n    .image-gallery-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(255,255,255,.8);\n        cursor: pointer;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n    }\n\n    .image-gallery-overlay .image-gallery-loading {\n        font-weight: bold;\n        padding: 10px 20px;\n        background-color: rgba(255,255,255,.4);\n        position: absolute;\n    }\n\n    .image-gallery-overlay img {\n        max-width: 100%;\n        max-height: 100%;\n        flex-shrink: 0;\n    }\n\n    .image-gallery-overlay div {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        z-index: 2;\n        font-weight: bold;\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n    }\n\n    .image-gallery-overlay div span {\n        padding: 10px 20px;\n        background-color: rgba(255,255,255,.4);\n    }\n\n    .image-gallery-overlay .back,\n    .image-gallery-overlay .forward {\n        display: block;\n        position: absolute;\n        height: 40px;\n        width: 40px;\n        opacity: .5;\n        background-repeat: no-repeat;\n        background-position: center;\n        padding: 20px;\n    }\n    .image-gallery-overlay .back { left: 0; background-image: url("data:image/svg+xml;base64,${btoa(svgBackButton)}"); }\n    .image-gallery-overlay .forward { right: 0; background-image: url("data:image/svg+xml;base64,${btoa(svgForwardButton)}"); }\n\n    .image-gallery-overlay.mobile .back,\n    .image-gallery-overlay.mobile .forward {\n        display: none;\n    }\n\n    @media (min-width: 1300px) {\n        .image-gallery-overlay div {\n            left: calc((100% - 1300px) /2);\n            right: auto;\n            max-width: 1300px;\n        }\n    }\n`;let supportsPassive=!1;try{const e=Object.defineProperty({},"passive",{get:function(){return supportsPassive=!0,!0}});window.addEventListener("testPassive",null,e),window.removeEventListener("testPassive",null,e)}catch(e){}let images=null,imageIndex=null,imageCount=0,overlay=null,overlayImg=null,overlayTitle=null,overlayIndex=null,overlayLoading=null,overlayBackButton=null,overlayForwardButton=null,touchStartX=null,loadingTimeoutId=null;const defaultLoadingText="Loading...",defaultLoadingTimeout=2e3,loadedImages=new Set,isMobile=(()=>{const e=window.navigator.userAgent.toLowerCase();return e.indexOf("android")>-1||e.indexOf("iphone")>-1||e.indexOf("ipad")>-1})();function showOverlay(){const e=images[imageIndex].getAttribute("image"),n=getImageTitle(images[imageIndex]),a=images[imageIndex].getAttribute("loading-text");loadCss(),(overlay=document.createElement("div")).className="image-gallery-overlay"+(isMobile?" mobile":""),(overlayLoading=document.createElement("span")).className="image-gallery-loading",overlayLoading.textContent=a||defaultLoadingText,overlayLoading.setAttribute("hidden",""),overlay.appendChild(overlayLoading),(overlayBackButton=document.createElement("span")).className="back",(overlayForwardButton=document.createElement("span")).className="forward",overlayBackButton.onclick=(()=>{changeImage("left")}),overlayForwardButton.onclick=(()=>{changeImage("right")}),overlay.appendChild(overlayBackButton),overlay.appendChild(overlayForwardButton),(overlayImg=document.createElement("img")).addEventListener("load",()=>{loadedImages.add(e),clearLoadingTimer(),null!==overlayLoading&&overlayLoading.setAttribute("hidden",""),preloadNextImages()}),overlayImg.src=e,overlay.appendChild(overlayImg);const t=document.createElement("div");(overlayTitle=document.createElement("span")).textContent=n,overlayTitle.style.display=n?"":"none",t.appendChild(overlayTitle),(overlayIndex=document.createElement("span")).textContent=`${imageIndex+1}/${imageCount}`,t.appendChild(overlayIndex),overlay.appendChild(t),addOverlayEvents(),document.documentElement.appendChild(overlay),document.querySelector("body").classList.add("blur"),startLoadingTimer()}function getImageTitle(e){let n=e.getAttribute("title");if(null===n){const a=e.querySelector("img[alt]");a&&(n=a.getAttribute("alt"))}return n}function startLoadingTimer(){clearLoadingTimer();const e=images[imageIndex].getAttribute("loading-timeout"),n=null===e?defaultLoadingTimeout:parseInt(e,10);loadingTimeoutId=window.setTimeout(function(){loadingTimeoutId=null,null!==overlayLoading&&overlayLoading.removeAttribute("hidden")},n)}function clearLoadingTimer(){null!==loadingTimeoutId&&(window.clearTimeout(loadingTimeoutId),loadingTimeoutId=null)}function loadCss(){let e=document.getElementById(overlayStyleId);null===e&&((e=document.createElement("style")).id=overlayStyleId,e.innerHTML=overlayStyleCss,document.head.appendChild(e))}function addOverlayEvents(){overlay.onclick=function(e){if("ontouchstart"in window){const n=window.innerHeight,a=n/4,t=n-a;if(e.clientY>=a&&e.clientY<=t)return}e.target!==overlayBackButton&&e.target!==overlayForwardButton&&hideOverlay()},document.addEventListener("keydown",handleDocKeyDown),overlay.addEventListener("touchstart",function(e){touchStartX=e.changedTouches[0].screenX},!!supportsPassive&&{passive:!0}),overlay.addEventListener("touchend",e=>{var n=e.changedTouches[0].screenX;n>touchStartX?changeImage("left"):n<touchStartX&&changeImage("right")})}function handleDocKeyDown(e){switch(e.key){case"ArrowLeft":changeImage("left");break;case"ArrowRight":changeImage("right");break;case"Escape":hideOverlay()}}function hideOverlay(){clearLoadingTimer(),overlay.parentNode.removeChild(overlay),overlayBackButton=null,overlayForwardButton=null,overlayLoading=null,overlayIndex=null,overlayTitle=null,overlayImg=null,overlay=null,document.removeEventListener("keydown",handleDocKeyDown),document.querySelector("body").classList.remove("blur")}function preloadNextImages(){let e=imageIndex-1;if(-1===e&&(e=imageCount-1),e!==imageIndex){const n=images[e].getAttribute("image");if(n&&!loadedImages.has(n)){const e=new Image;e.onload=(()=>{loadedImages.add(n)}),e.src=n}}let n=imageIndex+1;if(n===imageCount&&(n=0),n!==imageIndex){const e=images[n].getAttribute("image");if(e&&!loadedImages.has(e)){const n=new Image;n.onload=(()=>{loadedImages.add(e)}),n.src=e}}}function changeImage(e){const n=getImageTitle(images[imageIndex="right"===e?imageIndex===imageCount-1?0:imageIndex+1:0===imageIndex?imageCount-1:imageIndex-1]);overlayImg.src="",overlayImg.src=images[imageIndex].getAttribute("image"),overlayTitle.textContent=n,overlayTitle.style.display=n?"":"none",overlayIndex.textContent=`${imageIndex+1}/${imageCount}`,startLoadingTimer()}window.customElements.define("image-gallery",class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.addEventListener("click",this.handleClick)}handleClick(){null!==this.getAttribute("image")?(images=document.querySelectorAll("image-gallery[image]"),imageIndex=Array.from(images).indexOf(this),imageCount=images.length,showOverlay()):console.error("Unable to view large image because <image-gallery> attribute [image] is missing.")}});