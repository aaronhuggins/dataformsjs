import{render,buildUrl,polyfillCustomElements}from"./utils.min.js";import{Format}from"./utils-format.min.js";const shadowTmpl=document.createElement("template");function toggleHighlight(t){const e=t.target.nodeName;"A"!==e&&"INPUT"!==e&&"SELECT"!==e&&"TEXTAREA"!==e&&"BUTTON"!==e&&this.classList.toggle("highlight")}shadowTmpl.innerHTML="\n    <style>\n        :host { display: block; }\n        :host([hidden]) { display: none; }\n    </style>\n    <slot></slot>\n";class DataTable extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.state={list:null,hasBeenLoaded:!1}}static get observedAttributes(){return["col-link-template","col-link-fields","col-class","columns","labels","table-attr","highlight-class"]}attributeChangedCallback(t,e){switch(t){case"col-link-template":case"col-link-fields":case"col-class":case"columns":case"labels":case"table-attr":case"highlight-class":case"empty-data-text":(null!==e||this.state.hasBeenLoaded)&&this.renderTable()}}get value(){return this.state.list}set value(t){this.state.list=t,this.renderTable()}get errorClass(){return this.getAttribute("error-class")}get defaultErrorStyle(){return"color:white; background-color:red; padding:0.5rem 1rem; margin:.5rem;"}get emptyDataText(){const t=this.getAttribute("empty-data-text");return null===t?"No records found":t}getTemplate(){let t=this.querySelector("template");return null===t&&(t=this.querySelector('script[type="text/x-template"]')),t}removeTable(){if(null===this.getTemplate())return void(this.innerHTML="");const t=this.querySelector("table");null!==t&&t.parentNode.removeChild(t)}renderTable(){const t=this.state.list;if(null===t||""===t)return void this.removeTable();this.state.hasBeenLoaded=!0;const e=this.getTemplate(),r=t=>{null===e?this.innerHTML=t:(this.removeTable(),this.insertAdjacentHTML("beforeend",t))},s=t=>{const e=this.errorClass;r(e?render`<table class="${this.errorClass}"><caption>Error Rendering Template - ${t}</caption></table>`:render`<table><caption style="display:block; ${this.defaultErrorStyle}">Error Rendering Template - ${t}</caption></table>`)};if(Array.isArray(t)&&0===t.length)return void r(render`<table class="no-data"><caption style="display:block;">${this.emptyDataText}</caption></table>`);let l=!0;if(Array.isArray(t)?t.length>0&&"object"!=typeof t[0]&&(l=!1):l=!1,!l)return void s("Error invalid data type for <data-table>, an array of objects is required.");const n=this.getAttribute("columns"),i=n?n.split(",").map(t=>t.trim()):Object.keys(t[0]);let a=i,o=this.getAttribute("labels");o&&(a=o.split(",").map(t=>t.trim())).length!==i.length&&null===e&&(a=i);let h="<table",c=this.getAttribute("table-attr");if(c){c=c.split(",").map(t=>t.trim());for(const t of c){const e=t.indexOf("=");if(e>1){h+=render` ${t.substr(0,e).trim()}="${t.substr(e+1).trim()}"`}else h+=render` ${t}`}}const d=this.getAttribute("col-class"),u=[];if(u.push(`${h}><thead><tr>`),d){const t=d.split(",").map(t=>t.trim()),e={};for(const r of t){const t=r.indexOf("=");if(t>0){const s=r.substr(0,t),l=r.substr(t+1);e[s]=l}}for(let t=0,r=a.length;t<r;t++){const r=a[t];let s;void 0!==e[t.toString()]?s=e[t.toString()]:void 0!==e[r]&&(s=e[r]),s?u.push(render`<th class="${s}">${r}</th>`):u.push(render`<th>${r}</th>`)}}else for(const t of a)u.push(render`<th>${t}</th>`);if(u.push("</tr></thead>"),u.push("<tbody>"),e)try{const r=this.getAttribute("row-item-name");let l;l=r?new Function(r,"index","render","format","return render`"+e.innerHTML+"`"):new Function("item","index","render","format","with(item){return render`"+e.innerHTML+"`}");let n=0;const a=new Format;for(const e of t){try{u.push(l(e,n,render,a))}catch(t){this.errorClass?u.push(render`<tr class="${this.errorClass}">`):u.push(render`<tr style="${this.defaultErrorStyle}">`),u.push(render`<td colspan="${i.length}">Item Error - ${t.message}</td></tr>`)}n++}}catch(t){return void s("Error Rendering Template - "+t.message)}else{const e=this.getAttribute("col-link-template");let r=this.getAttribute("col-link-fields");e&&(r=r?r.split(",").map(t=>t.trim()):[i[0]]);for(const s of t){const t=[];t.push("<tr>");for(const l of i)e&&r.includes(l)?t.push(render`<td>
                            <a href="${buildUrl(e,s)}">${s[l]}</a>
                        </td>`):t.push(render`<td>${s[l]}</td>`);t.push("</tr>"),u.push(t.join(""))}}if(u.push("</tbody></table>"),r(u.join("")),this.getAttribute("highlight-class")){const t=this.querySelectorAll("tbody tr");for(const e of t)e.style.cursor="pointer",e.addEventListener("click",toggleHighlight)}polyfillCustomElements(this)}}window.customElements.define("data-table",DataTable);